{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"User": {
				"properties": {
					"email": {
						"type": "string"
					},
					"displayName": {
						"type": "string"
					},
					"role": {
						"type": "string",
						"enum": [
							"user",
							"lab_manager",
							"admin"
						]
					}
				},
				"required": [
					"email",
					"displayName",
					"role"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ReagentTradingType": {
				"type": "string",
				"enum": [
					"trade",
					"giveaway",
					"sell"
				]
			},
			"ReagentCategory": {
				"type": "string",
				"enum": [
					"chemical",
					"hazardous",
					"biological"
				]
			},
			"Reagent": {
				"properties": {
					"user_id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"condition": {
						"type": "string"
					},
					"price": {
						"type": "number",
						"format": "double"
					},
					"quantity": {
						"type": "number",
						"format": "double"
					},
					"expiryDate": {
						"type": "string"
					},
					"tradingType": {
						"$ref": "#/components/schemas/ReagentTradingType"
					},
					"images": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"categories": {
						"items": {
							"$ref": "#/components/schemas/ReagentCategory"
						},
						"type": "array"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"location": {
						"type": "string"
					},
					"unit": {
						"type": "string"
					}
				},
				"required": [
					"user_id",
					"name",
					"description",
					"condition",
					"quantity",
					"expiryDate",
					"tradingType",
					"categories",
					"createdAt",
					"location",
					"unit"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateReagentRequest": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"condition": {
						"type": "string"
					},
					"categories": {
						"items": {
							"$ref": "#/components/schemas/ReagentCategory"
						},
						"type": "array"
					},
					"price": {
						"type": "number",
						"format": "double"
					},
					"quantity": {
						"type": "number",
						"format": "double"
					},
					"expiryDate": {
						"type": "string"
					},
					"tradingType": {
						"$ref": "#/components/schemas/ReagentTradingType"
					},
					"location": {
						"type": "string"
					},
					"images": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"description",
					"condition",
					"categories",
					"quantity",
					"expiryDate",
					"tradingType",
					"location"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_Reagent_": {
				"properties": {
					"user_id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"condition": {
						"type": "string"
					},
					"price": {
						"type": "number",
						"format": "double"
					},
					"quantity": {
						"type": "number",
						"format": "double"
					},
					"expiryDate": {
						"type": "string"
					},
					"tradingType": {
						"$ref": "#/components/schemas/ReagentTradingType"
					},
					"images": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"categories": {
						"items": {
							"$ref": "#/components/schemas/ReagentCategory"
						},
						"type": "array"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"location": {
						"type": "string"
					},
					"unit": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Order": {
				"properties": {
					"requester_id": {
						"type": "string"
					},
					"reagent_id": {
						"type": "string"
					},
					"owner_id": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"enum": [
							"pending",
							"approved",
							"canceled"
						]
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"message": {
						"type": "string"
					},
					"quantity": {
						"type": "number",
						"format": "double"
					},
					"unit": {
						"type": "string"
					}
				},
				"required": [
					"requester_id",
					"reagent_id",
					"owner_id",
					"status",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateOrderRequest": {
				"properties": {
					"reagent_id": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"type": {
						"type": "string",
						"enum": [
							"order"
						],
						"nullable": false
					},
					"quantity": {
						"type": "number",
						"format": "double"
					},
					"unit": {
						"type": "string"
					}
				},
				"required": [
					"reagent_id",
					"type",
					"quantity",
					"unit"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Trade": {
				"properties": {
					"requester_id": {
						"type": "string"
					},
					"reagent_id": {
						"type": "string"
					},
					"owner_id": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"enum": [
							"pending",
							"approved",
							"canceled"
						]
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"message": {
						"type": "string"
					},
					"quantity": {
						"type": "number",
						"format": "double"
					},
					"unit": {
						"type": "string"
					},
					"price": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"requester_id",
					"reagent_id",
					"owner_id",
					"status",
					"createdAt",
					"price"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateTradeRequest": {
				"properties": {
					"reagent_id": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"price": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"type": "string",
						"enum": [
							"trade"
						],
						"nullable": false
					},
					"quantity": {
						"type": "number",
						"format": "double"
					},
					"unit": {
						"type": "string"
					}
				},
				"required": [
					"reagent_id",
					"price",
					"type",
					"quantity",
					"unit"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Exchange": {
				"properties": {
					"requester_id": {
						"type": "string"
					},
					"reagent_id": {
						"type": "string"
					},
					"owner_id": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"enum": [
							"pending",
							"approved",
							"canceled"
						]
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"message": {
						"type": "string"
					},
					"quantity": {
						"type": "number",
						"format": "double"
					},
					"unit": {
						"type": "string"
					},
					"offeredReagentId": {
						"type": "string"
					}
				},
				"required": [
					"requester_id",
					"reagent_id",
					"owner_id",
					"status",
					"createdAt",
					"offeredReagentId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateExchangeRequest": {
				"properties": {
					"reagent_id": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"offeredReagentId": {
						"type": "string"
					},
					"quantity": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"type": "string",
						"enum": [
							"exchange"
						],
						"nullable": false
					},
					"unit": {
						"type": "string"
					}
				},
				"required": [
					"reagent_id",
					"offeredReagentId",
					"quantity",
					"type",
					"unit"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ChatRoom": {
				"properties": {
					"id": {
						"type": "string"
					},
					"user1_id": {
						"type": "string"
					},
					"user2_id": {
						"type": "string"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"user1_id",
					"user2_id",
					"created_at"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Message": {
				"properties": {
					"id": {
						"type": "string"
					},
					"chat_room_id": {
						"type": "string"
					},
					"sender_id": {
						"type": "string"
					},
					"content": {
						"type": "string"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"chat_room_id",
					"sender_id",
					"content",
					"created_at"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ChatRoomResponse": {
				"properties": {
					"chat_room": {
						"$ref": "#/components/schemas/ChatRoom"
					},
					"messages": {
						"items": {
							"$ref": "#/components/schemas/Message"
						},
						"type": "array"
					},
					"other_user": {
						"properties": {
							"email": {
								"type": "string"
							},
							"name": {
								"type": "string"
							},
							"id": {
								"type": "string"
							}
						},
						"required": [
							"email",
							"name",
							"id"
						],
						"type": "object"
					}
				},
				"required": [
					"chat_room",
					"messages",
					"other_user"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateChatRoomRequest": {
				"properties": {
					"user1_id": {
						"type": "string"
					},
					"user2_id": {
						"type": "string"
					},
					"initial_message": {
						"type": "string"
					}
				},
				"required": [
					"user1_id",
					"user2_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SendMessageRequest": {
				"properties": {
					"chat_room_id": {
						"type": "string"
					},
					"sender_id": {
						"type": "string"
					},
					"content": {
						"type": "string"
					}
				},
				"required": [
					"chat_room_id",
					"sender_id",
					"content"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ConversationListResponse": {
				"properties": {
					"conversations": {
						"items": {
							"$ref": "#/components/schemas/ChatRoomResponse"
						},
						"type": "array"
					}
				},
				"required": [
					"conversations"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GoogleOAuthUser": {
				"properties": {
					"uid": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"displayName": {
						"type": "string"
					},
					"photoURL": {
						"type": "string"
					}
				},
				"required": [
					"uid",
					"email"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GoogleOAuthResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"token": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/GoogleOAuthUser"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GoogleOAuthRequest": {
				"properties": {
					"idToken": {
						"type": "string"
					}
				},
				"required": [
					"idToken"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SendVerificationCodeResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SendVerificationCodeRequest": {
				"properties": {
					"email": {
						"type": "string"
					}
				},
				"required": [
					"email"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VerifyCodeResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VerifyCodeRequest": {
				"properties": {
					"email": {
						"type": "string"
					},
					"inputCode": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"inputCode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VerifyTokenResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"uid": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VerifyTokenRequest": {
				"properties": {
					"idToken": {
						"type": "string"
					}
				},
				"required": [
					"idToken"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT",
				"description": "enter 'Bearer {Firebase ID token}'"
			}
		}
	},
	"info": {
		"title": "server",
		"version": "1.0.0",
		"contact": {}
	},
	"paths": {
		"/users": {
			"get": {
				"operationId": "GetAllUsers",
				"responses": {
					"200": {
						"description": "Users retrieved successfully",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/User"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [],
				"parameters": []
			}
		},
		"/users/{user_id}": {
			"get": {
				"operationId": "GetUserById",
				"responses": {
					"200": {
						"description": "User retrieved successfully",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/User"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "get user info using user id",
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [
					{
						"description": "- the id of the user to fetch",
						"in": "path",
						"name": "user_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/users/{user_id}/email": {
			"get": {
				"operationId": "GetEmail",
				"responses": {
					"200": {
						"description": "User email retrieved successfully",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"email": {
											"type": "string"
										}
									},
									"required": [
										"email"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Get email of the current logged in user",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "user_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/users/{user_id}/jwt": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "User information returned successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"description": "Gets the basic information of a user",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "- the ID of the user to retrieve",
						"in": "path",
						"name": "user_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/users/reagents": {
			"get": {
				"operationId": "GetReagents",
				"responses": {
					"200": {
						"description": "All reagents returned successfully",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Reagent"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all reagents under a user\nUser must be authenticated to access this endpoint",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "CreateReagent",
				"responses": {
					"201": {
						"description": "Reagent created successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Reagent"
								}
							}
						}
					}
				},
				"description": "Create a reagent by passing in all the required props.\nUser **must** be authenticated to access this endpoint (lab manager / admin) [seller]",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"description": "- the request object containing the data of the reagent (id generated by db)",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateReagentRequest",
								"description": "- the request object containing the data of the reagent (id generated by db)"
							}
						}
					}
				}
			}
		},
		"/users/reagents/{id}": {
			"get": {
				"operationId": "GetReagentById",
				"responses": {
					"200": {
						"description": "reagent returned successfully",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Reagent"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Get a reagent by using its ID\nUser must be authenticated to access this endpoint",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "- The ID of the reagent to fetch",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteReagentById",
				"responses": {
					"200": {
						"description": "reagent deleted successfully",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Reagent"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Delete a reagent by using its ID\nUser **must** be authenticated to access this endpoint",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "- The ID of the reagent to delete",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "UpdateReagent",
				"responses": {
					"200": {
						"description": "Reagent updated successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Reagent"
								}
							}
						}
					}
				},
				"description": "Update a reagent by its ID.\nUser **must** be authenticated to access this endpoint",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "- The ID of the reagent to update.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "- The updated reagent data (partial fields allowed)",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_Reagent_",
								"description": "- The updated reagent data (partial fields allowed)"
							}
						}
					}
				}
			}
		},
		"/users/{id}/reagents": {
			"get": {
				"operationId": "GetReagentsByUserId",
				"responses": {
					"200": {
						"description": "All reagents returned successfully",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Reagent"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "\nGet all reagents under another user by their user id\nCan only be done by admin*",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/reagents": {
			"get": {
				"operationId": "GetAllReagents",
				"responses": {
					"200": {
						"description": "Reagents retrieved successfully",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Reagent"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all reagents with an option to filter them by category.",
				"security": [],
				"parameters": [
					{
						"description": "- The list of all categories to fetch reagents from.",
						"in": "query",
						"name": "category",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/ReagentCategory"
							}
						}
					}
				]
			}
		},
		"/reagents/{id}": {
			"get": {
				"operationId": "GetReagent",
				"responses": {
					"200": {
						"description": "Reagent retrieved successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Reagent"
								}
							}
						}
					}
				},
				"description": "Get a reagent by its ID.",
				"security": [],
				"parameters": [
					{
						"description": "- The ID of the reagent to retrieve.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateReagent",
				"responses": {
					"201": {
						"description": "Reagent created successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Reagent"
								}
							}
						}
					}
				},
				"description": "Get a reagent by its ID.\nCan only be done by lab_admin and admin",
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "- the request object containing the data of the reagent (id generated by db)",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateReagentRequest",
								"description": "- the request object containing the data of the reagent (id generated by db)"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteReagent",
				"responses": {
					"200": {
						"description": "Reagent deleted successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Reagent"
								}
							}
						}
					}
				},
				"description": "Delete a reagent by its ID.\nCan only be done by lab_admin (who owns the reagent) and admin",
				"security": [],
				"parameters": [
					{
						"description": "- The ID of the reagent to delete.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "UpdateReagent",
				"responses": {
					"200": {
						"description": "Reagent updated successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Reagent"
								}
							}
						}
					}
				},
				"description": "Update a reagent by its ID.\nCan only be done by lab_admin (who owns the reagent) and admin",
				"security": [],
				"parameters": [
					{
						"description": "- The ID of the reagent to update.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "- The updated reagent data (partial fields allowed)",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_Reagent_",
								"description": "- The updated reagent data (partial fields allowed)"
							}
						}
					}
				}
			}
		},
		"/orders": {
			"post": {
				"operationId": "CreateOrder",
				"responses": {
					"201": {
						"description": "Order created successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Order"
								}
							}
						}
					}
				},
				"tags": [
					"Order"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateOrderRequest"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetOrders",
				"responses": {
					"200": {
						"description": "All orders returned successfully",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"items": {
												"$ref": "#/components/schemas/Order"
											},
											"type": "array"
										},
										{
											"items": {
												"$ref": "#/components/schemas/Trade"
											},
											"type": "array"
										},
										{
											"items": {
												"$ref": "#/components/schemas/Exchange"
											},
											"type": "array"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Order"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/orders/trades": {
			"post": {
				"operationId": "CreateTrade",
				"responses": {
					"201": {
						"description": "Trade created successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Trade"
								}
							}
						}
					}
				},
				"tags": [
					"Order"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateTradeRequest"
							}
						}
					}
				}
			}
		},
		"/orders/exchanges": {
			"post": {
				"operationId": "CreateExchange",
				"responses": {
					"201": {
						"description": "Exchange created successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Exchange"
								}
							}
						}
					}
				},
				"tags": [
					"Order"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateExchangeRequest"
							}
						}
					}
				}
			}
		},
		"/orders/{id}": {
			"get": {
				"operationId": "GetOrderById",
				"responses": {
					"200": {
						"description": "All orders returned successfully",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/Order"
										},
										{
											"$ref": "#/components/schemas/Trade"
										},
										{
											"$ref": "#/components/schemas/Exchange"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Order"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/orders/{id}/approve": {
			"patch": {
				"operationId": "ApproveOrder",
				"responses": {
					"200": {
						"description": "order successfully approved",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/Order"
										},
										{
											"$ref": "#/components/schemas/Trade"
										},
										{
											"$ref": "#/components/schemas/Exchange"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Order"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/orders/{id}/cancel": {
			"patch": {
				"operationId": "CancelOrder",
				"responses": {
					"200": {
						"description": "order successfully canceld",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/Order"
										},
										{
											"$ref": "#/components/schemas/Trade"
										},
										{
											"$ref": "#/components/schemas/Exchange"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Order"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/inbox/chatroom": {
			"post": {
				"operationId": "CreateChatRoom",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ChatRoomResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Inbox"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateChatRoomRequest"
							}
						}
					}
				}
			}
		},
		"/inbox/message": {
			"post": {
				"operationId": "SendMessage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ChatRoomResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Inbox"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SendMessageRequest"
							}
						}
					}
				}
			}
		},
		"/inbox/conversations/{userId}": {
			"get": {
				"operationId": "GetConversations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ConversationListResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Inbox"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/inbox/chatroom/{chatRoomId}/{userId}": {
			"get": {
				"operationId": "GetChatRoomById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ChatRoomResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Inbox"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "chatRoomId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/auth/google/verify": {
			"post": {
				"operationId": "VerifyToken",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GoogleOAuthResponse"
								}
							}
						}
					}
				},
				"description": "Verifies Google ID token and authenticates user.",
				"tags": [
					"Google OAuth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GoogleOAuthRequest"
							}
						}
					}
				}
			}
		},
		"/auth/send-verification-code": {
			"post": {
				"operationId": "SendVerificationCode",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SendVerificationCodeResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SendVerificationCodeRequest"
							}
						}
					}
				}
			}
		},
		"/auth/verify-code": {
			"post": {
				"operationId": "VerifyCode",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VerifyCodeResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VerifyCodeRequest"
							}
						}
					}
				}
			}
		},
		"/auth/verify-token": {
			"post": {
				"operationId": "VerifyToken",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VerifyTokenResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VerifyTokenRequest"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}